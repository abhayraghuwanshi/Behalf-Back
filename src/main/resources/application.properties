spring.application.name=delta

server.host=${HOST}

# postgresql://postgres:MqsMOpctHObqlXboXGiFqdNwyOIanjaG@junction.proxy.rlwy.net:48671/railway
# H2 Database Configuration
spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPRIVATEPORT}/railway
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=${PGPASSWORD}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# H2 Console Configuration
#spring.h2.console.enabled=false
#spring.h2.console.path=/h2-console

spring.security.web = DEBUG

spring.security.oauth2.client.registration.google.client-id=99043044974-cap6scqust350juulqjsrr0d3f07tj4d.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://${server.host}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.default-redirect-uri= ${FRONT_END_URL}

logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.security.web.authentication=DEBUG
logging.level.org.springframework.security=DEBUG


spring.cache.type = redis
spring.data.redis.database = 0
spring.data.redis.host = ${REDISHOST}
spring.data.redis.port = ${REDISPORT}
spring.data.redis.username=${REDISUSER}
spring.data.redis.password= ${REDISPASSWORD}
spring.redis.ssl.enable = false
#spring.session.store-type=redis

# 60000 -> 1min
spring.cache.time-to-live = 6000000
#logging.level.org.springframework.cache = DEBUG
#logging.level.org.springframework.data.redis= DEBUG

setting.frontend-url = ${FRONT_END_URL}